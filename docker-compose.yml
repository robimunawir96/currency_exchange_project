version: '3.8'

services:
  # Airflow Init (sekali jalan untuk inisialisasi DB)
  airflow-init:
    image: apache/airflow:2.9.0
    container_name: airflow-init
    restart: "no"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://robi:robimunawir@postgres:5432/currency_db
    user: "${AIRFLOW_UID}:${AIRFLOW_GID}"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/config:/opt/airflow/config
      - airflow_logs:/opt/airflow/logs
    entrypoint: >
      bash -c "airflow db init && airflow users create --username robi --password robimunawir --firstname Robi --lastname Munawir --role Admin --email robimunawir1@gmail.com"
    depends_on:
      - postgres

  airflow-webserver:
    image: apache/airflow:2.9.0
    container_name: airflow-webserver
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - airflow-init
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://robi:robimunawir@postgres:5432/currency_db
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    env_file:
      - .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - airflow_logs:/opt/airflow/logs
    command: webserver

  airflow-scheduler:
    image: apache/airflow:2.9.0
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-init
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://robi:robimunawir@postgres:5432/currency_db
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    env_file:
      - .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - airflow_logs:/opt/airflow/logs
    command: scheduler

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - postgres

volumes:
  airflow_logs:
  postgres_data:
  grafana_data:
